%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 343 575 448
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: sabato 27 agosto 2022 15.55.10 CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
560 105 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
560.000 0 l
560.000 105.000 l
0 105.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
1 0 560 105 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] concat
0 0 550 95 rc
1.00000 w
2 J
0 j
0 J
1 j
q
[ 2.00000 5.00000 ] 0 d
0.647059 0.647059 0.647059 RG
newpath
94.0000 91.0000 m
94.0000 10.0849 l
S
newpath
244.331 91.0000 m
244.331 10.0849 l
S
newpath
394.663 91.0000 m
394.663 10.0849 l
S
newpath
544.994 91.0000 m
544.994 10.0849 l
S
0.913725 0.913725 0.913725 RG
newpath
169.165 91.0000 m
169.165 10.0849 l
S
newpath
319.497 91.0000 m
319.497 10.0849 l
S
newpath
469.828 91.0000 m
469.828 10.0849 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
[ 2.00000 5.00000 ] 0 d
0.647059 0.647059 0.647059 RG
newpath
94.0000 83.8262 m
544.994 83.8262 l
S
newpath
94.0000 65.3913 m
544.994 65.3913 l
S
newpath
94.0000 46.9564 m
544.994 46.9564 l
S
newpath
94.0000 28.5215 m
544.994 28.5215 l
S
newpath
94.0000 10.0866 m
544.994 10.0866 l
S
0.913725 0.913725 0.913725 RG
newpath
94.0000 74.6087 m
544.994 74.6087 l
S
newpath
94.0000 56.1738 m
544.994 56.1738 l
S
newpath
94.0000 37.7389 m
544.994 37.7389 l
S
newpath
94.0000 19.3040 m
544.994 19.3040 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
0.337255 0.705882 0.913725 RG
91.0000 6.08490 457.994 87.9150 rc
newpath
94.0000 10.0866 m
96.3711 10.0863 l
98.4342 10.0857 l
100.754 10.0851 l
103.090 10.0849 l
105.414 10.0854 l
107.569 10.0868 l
109.801 10.0897 l
112.108 10.0944 l
114.409 10.1012 l
116.775 10.1109 l
118.859 10.1220 l
121.206 10.1376 l
123.561 10.1571 l
125.832 10.1799 l
127.894 10.2042 l
130.345 10.2380 l
132.422 10.2711 l
134.838 10.3152 l
136.976 10.3595 l
139.322 10.4141 l
141.556 10.4724 l
143.888 10.5401 l
146.028 10.6087 l
148.337 10.6899 l
150.736 10.7826 l
152.823 10.8705 l
155.078 10.9732 l
157.408 11.0882 l
159.687 11.2098 l
161.892 11.3361 l
164.340 11.4869 l
166.540 11.6321 l
168.889 11.7975 l
171.017 11.9569 l
173.344 12.1419 l
175.534 12.3264 l
177.822 12.5302 l
180.060 12.7407 l
182.402 12.9732 l
184.658 13.2090 l
186.965 13.4626 l
189.254 13.7266 l
191.356 13.9804 l
193.766 14.2847 l
195.921 14.5693 l
198.219 14.8857 l
200.419 15.2014 l
202.861 15.5666 l
204.976 15.8957 l
207.376 16.2837 l
209.563 16.6509 l
211.956 17.0675 l
214.021 17.4396 l
216.372 17.8778 l
218.644 18.3157 l
220.914 18.7679 l
223.175 19.2328 l
225.348 19.6932 l
227.696 20.2060 l
229.935 20.7095 l
232.291 21.2548 l
234.423 21.7622 l
236.780 22.3382 l
239.038 22.9048 l
241.290 23.4846 l
243.642 24.1057 l
245.808 24.6918 l
248.027 25.3058 l
250.477 25.9999 l
252.695 26.6430 l
254.964 27.3149 l
257.271 28.0128 l
259.391 28.6673 l
261.652 29.3784 l
263.895 30.0978 l
266.294 30.8821 l
268.412 31.5868 l
270.855 32.4144 l
273.060 33.1742 l
275.241 33.9381 l
277.587 34.7726 l
279.942 35.6239 l
282.085 36.4098 l
284.361 37.2560 l
286.582 38.0931 l
288.989 39.0127 l
291.072 39.8184 l
293.465 40.7547 l
295.714 41.6454 l
297.941 42.5370 l
300.171 43.4384 l
302.444 44.3669 l
304.854 45.3606 l
307.064 46.2798 l
309.245 47.1944 l
311.577 48.1796 l
313.904 49.1698 l
315.992 50.0642 l
318.466 51.1299 l
320.536 52.0265 l
322.957 53.0801 l
325.267 54.0900 l
327.331 54.9947 l
329.651 56.0151 l
331.986 57.0447 l
334.311 58.0711 l
336.466 59.0236 l
338.697 60.0101 l
341.005 61.0300 l
343.306 62.0455 l
345.672 63.0881 l
347.756 64.0040 l
350.102 65.0318 l
352.458 66.0593 l
354.729 67.0445 l
356.790 67.9341 l
359.242 68.9848 l
361.319 69.8681 l
363.734 70.8868 l
365.873 71.7799 l
368.219 72.7494 l
370.453 73.6616 l
372.784 74.6010 l
374.925 75.4517 l
377.234 76.3553 l
379.632 77.2776 l
381.720 78.0659 l
383.975 78.9011 l
386.304 79.7454 l
388.583 80.5518 l
390.788 81.3127 l
393.237 82.1340 l
395.437 82.8496 l
397.785 83.5892 l
399.914 84.2364 l
402.241 84.9178 l
404.430 85.5330 l
406.719 86.1477 l
408.956 86.7197 l
411.299 87.2863 l
413.555 87.7997 l
415.862 88.2905 l
418.150 88.7417 l
420.253 89.1240 l
422.662 89.5226 l
424.818 89.8421 l
427.116 90.1428 l
429.315 90.3908 l
431.757 90.6188 l
433.872 90.7746 l
436.272 90.9032 l
438.460 90.9743 l
440.853 91.0000 l
442.918 90.9771 l
445.269 90.8987 l
447.540 90.7686 l
449.810 90.5834 l
452.072 90.3427 l
454.244 90.0570 l
456.593 89.6865 l
458.831 89.2722 l
461.187 88.7699 l
463.320 88.2550 l
465.677 87.6176 l
467.934 86.9383 l
470.186 86.1917 l
472.539 85.3365 l
474.705 84.4792 l
476.924 83.5302 l
479.374 82.3970 l
481.592 81.2917 l
483.860 80.0818 l
486.167 78.7668 l
488.288 77.4813 l
490.548 76.0282 l
492.791 74.4998 l
495.191 72.7678 l
497.308 71.1541 l
499.752 69.1908 l
501.956 67.3238 l
504.138 65.3857 l
506.484 63.1990 l
508.839 60.8941 l
510.982 58.6999 l
513.258 56.2665 l
515.478 53.7874 l
517.886 50.9812 l
519.969 48.4514 l
522.362 45.4274 l
524.611 42.4671 l
526.838 39.4209 l
529.067 36.2563 l
531.341 32.9069 l
533.751 29.2201 l
535.961 25.7139 l
538.142 22.1329 l
540.474 18.1708 l
542.800 14.0770 l
544.994 10.0866 l
S
cliprestore
newpath
0 0 m
0 95.0000 l
550.000 95.0000 l
550.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
94.0000 10.0866 m
544.994 10.0866 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
297 32 45 18 rc
newpath
304.343 40.1093 m
309.312 40.1093 l
309.312 40.3125 l
303.906 45.9375 l
306.187 45.9375 l
306.729 45.9375 307.072 45.9166 307.218 45.8750  c
307.364 45.8333 307.500 45.7447 307.625 45.6093  c
307.750 45.4739 307.885 45.2291 308.031 44.8750  c
308.328 44.8750 l
307.640 47.0000 l
302.546 47.0000 l
302.546 46.7656 l
307.968 41.1406 l
305.718 41.1406 l
305.239 41.1406 304.953 41.1562 304.859 41.1875  c
304.713 41.2187 304.567 41.2994 304.421 41.4296  c
304.276 41.5599 304.130 41.7812 303.984 42.0937  c
303.687 42.0937 l
304.343 40.1093 l
h
f
newpath
318.750 50.1718 m
315.312 50.1718 l
315.312 36.1562 l
318.750 36.1562 l
318.750 36.7812 l
316.484 36.7812 l
316.484 49.5625 l
318.750 49.5625 l
318.750 50.1718 l
h
321.953 41.1562 m
322.474 40.6354 322.781 40.3333 322.875 40.2500  c
323.114 40.0520 323.369 39.8984 323.640 39.7890  c
323.911 39.6796 324.177 39.6250 324.437 39.6250  c
324.885 39.6250 325.270 39.7552 325.593 40.0156  c
325.916 40.2760 326.135 40.6562 326.250 41.1562  c
326.781 40.5312 327.231 40.1197 327.601 39.9218  c
327.971 39.7239 328.354 39.6250 328.750 39.6250  c
329.125 39.6250 329.460 39.7239 329.757 39.9218  c
330.054 40.1197 330.286 40.4375 330.453 40.8750  c
330.567 41.1770 330.625 41.6510 330.625 42.2968  c
330.625 45.3750 l
330.625 45.8229 330.661 46.1302 330.734 46.2968  c
330.786 46.4114 330.882 46.5104 331.023 46.5937  c
331.164 46.6770 331.390 46.7187 331.703 46.7187  c
331.703 47.0000 l
328.171 47.0000 l
328.171 46.7187 l
328.328 46.7187 l
328.630 46.7187 328.869 46.6562 329.046 46.5312  c
329.161 46.4479 329.244 46.3177 329.296 46.1406  c
329.317 46.0468 329.328 45.7916 329.328 45.3750  c
329.328 42.2968 l
329.328 41.7135 329.260 41.3020 329.125 41.0625  c
328.916 40.7291 328.588 40.5625 328.140 40.5625  c
327.869 40.5625 327.593 40.6328 327.312 40.7734  c
327.031 40.9140 326.692 41.1718 326.296 41.5468  c
326.281 41.6250 l
326.296 41.9687 l
326.296 45.3750 l
326.296 45.8645 326.325 46.1692 326.382 46.2890  c
326.440 46.4088 326.544 46.5104 326.695 46.5937  c
326.846 46.6770 327.104 46.7187 327.468 46.7187  c
327.468 47.0000 l
323.843 47.0000 l
323.843 46.7187 l
324.239 46.7187 324.513 46.6718 324.664 46.5781  c
324.815 46.4843 324.916 46.3437 324.968 46.1562  c
325.000 46.0625 325.015 45.8020 325.015 45.3750  c
325.015 42.2968 l
325.015 41.7135 324.927 41.2968 324.750 41.0468  c
324.520 40.7135 324.203 40.5468 323.796 40.5468  c
323.515 40.5468 323.234 40.6197 322.953 40.7656  c
322.526 40.9947 322.192 41.2552 321.953 41.5468  c
321.953 45.3750 l
321.953 45.8437 321.987 46.1484 322.054 46.2890  c
322.122 46.4296 322.218 46.5364 322.343 46.6093  c
322.468 46.6822 322.729 46.7187 323.125 46.7187  c
323.125 47.0000 l
319.578 47.0000 l
319.578 46.7187 l
319.911 46.7187 320.143 46.6822 320.273 46.6093  c
320.403 46.5364 320.502 46.4244 320.570 46.2734  c
320.638 46.1224 320.671 45.8229 320.671 45.3750  c
320.671 42.6406 l
320.671 41.8593 320.645 41.3541 320.593 41.1250  c
320.562 40.9479 320.507 40.8281 320.429 40.7656  c
320.351 40.7031 320.244 40.6718 320.109 40.6718  c
319.963 40.6718 319.786 40.7083 319.578 40.7812  c
319.468 40.5000 l
321.625 39.6250 l
321.953 39.6250 l
321.953 41.1562 l
h
332.367 36.1562 m
335.804 36.1562 l
335.804 50.1875 l
332.367 50.1875 l
332.367 49.5625 l
334.632 49.5625 l
334.632 36.7812 l
332.367 36.7812 l
332.367 36.1562 l
h
f
Q
cliprestore
newpath
0 0 m
0 95.0000 l
550.000 95.0000 l
550.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 10.0866 m
94.0000 13.4116 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
244.331 10.0866 m
244.331 13.4116 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 250.000 29.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -250.000 -29.0000 ] concat
newpath
247.875 24.4375 m
250.453 23.1875 l
250.718 23.1875 l
250.718 32.1250 l
250.718 32.7187 250.742 33.0885 250.789 33.2343  c
250.835 33.3802 250.937 33.4921 251.093 33.5703  c
251.250 33.6484 251.567 33.6927 252.046 33.7031  c
252.046 34.0000 l
248.062 34.0000 l
248.062 33.7031 l
248.562 33.6927 248.885 33.6510 249.031 33.5781  c
249.177 33.5052 249.278 33.4036 249.335 33.2734  c
249.393 33.1432 249.421 32.7604 249.421 32.1250  c
249.421 26.4062 l
249.421 25.6354 249.395 25.1406 249.343 24.9218  c
249.312 24.7552 249.247 24.6328 249.148 24.5546  c
249.049 24.4765 248.932 24.4375 248.796 24.4375  c
248.609 24.4375 248.343 24.5208 248.000 24.6875  c
247.875 24.4375 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
394.663 10.0866 m
394.663 13.4116 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 400.000 29.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -400.000 -29.0000 ] concat
newpath
403.343 31.9531 m
402.593 34.0000 l
396.343 34.0000 l
396.343 33.7031 l
398.187 32.0260 399.484 30.6562 400.234 29.5937  c
400.984 28.5312 401.359 27.5625 401.359 26.6875  c
401.359 26.0104 401.153 25.4557 400.742 25.0234  c
400.330 24.5911 399.838 24.3750 399.265 24.3750  c
398.744 24.3750 398.276 24.5286 397.859 24.8359  c
397.442 25.1432 397.135 25.5885 396.937 26.1718  c
396.656 26.1718 l
396.781 25.2135 397.114 24.4765 397.656 23.9609  c
398.197 23.4453 398.869 23.1875 399.671 23.1875  c
400.536 23.1875 401.255 23.4635 401.828 24.0156  c
402.401 24.5677 402.687 25.2187 402.687 25.9687  c
402.687 26.5000 402.562 27.0364 402.312 27.5781  c
401.927 28.4218 401.302 29.3125 400.437 30.2500  c
399.145 31.6666 398.338 32.5208 398.015 32.8125  c
400.781 32.8125 l
401.343 32.8125 401.737 32.7916 401.960 32.7500  c
402.184 32.7083 402.388 32.6250 402.570 32.5000  c
402.752 32.3750 402.911 32.1927 403.046 31.9531  c
403.343 31.9531 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
544.994 10.0866 m
544.994 13.4116 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 550.000 29.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -550.000 -29.0000 ] concat
newpath
546.812 25.4218 m
547.114 24.7031 547.497 24.1510 547.960 23.7656  c
548.424 23.3802 549.000 23.1875 549.687 23.1875  c
550.531 23.1875 551.182 23.4635 551.640 24.0156  c
551.984 24.4218 552.156 24.8593 552.156 25.3281  c
552.156 26.0989 551.671 26.8958 550.703 27.7187  c
551.349 27.9791 551.838 28.3463 552.171 28.8203  c
552.505 29.2942 552.671 29.8489 552.671 30.4843  c
552.671 31.4010 552.380 32.1979 551.796 32.8750  c
551.036 33.7500 549.937 34.1875 548.500 34.1875  c
547.781 34.1875 547.294 34.0989 547.039 33.9218  c
546.783 33.7447 546.656 33.5520 546.656 33.3437  c
546.656 33.1979 546.716 33.0677 546.835 32.9531  c
546.955 32.8385 547.104 32.7812 547.281 32.7812  c
547.406 32.7812 547.536 32.8020 547.671 32.8437  c
547.765 32.8645 547.968 32.9583 548.281 33.1250  c
548.593 33.2916 548.807 33.3906 548.921 33.4218  c
549.119 33.4739 549.328 33.5000 549.546 33.5000  c
550.078 33.5000 550.539 33.2942 550.929 32.8828  c
551.320 32.4713 551.515 31.9843 551.515 31.4218  c
551.515 31.0156 551.427 30.6145 551.250 30.2187  c
551.114 29.9270 550.963 29.7083 550.796 29.5625  c
550.578 29.3541 550.273 29.1640 549.882 28.9921  c
549.492 28.8203 549.093 28.7343 548.687 28.7343  c
548.437 28.7343 l
548.437 28.5000 l
548.843 28.4479 549.255 28.2994 549.671 28.0546  c
550.088 27.8099 550.390 27.5156 550.578 27.1718  c
550.765 26.8281 550.859 26.4531 550.859 26.0468  c
550.859 25.5052 550.690 25.0703 550.351 24.7421  c
550.013 24.4140 549.593 24.2500 549.093 24.2500  c
548.291 24.2500 547.619 24.6822 547.078 25.5468  c
546.812 25.4218 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
169.165 10.0866 m
169.165 11.7491 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 175.000 20.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -175.000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
319.497 10.0866 m
319.497 11.7491 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 325.000 20.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -325.000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
469.828 10.0866 m
469.828 11.7491 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 475.000 20.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -475.000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
94.0000 91.0000 m
94.0000 10.0849 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 41 58 18 rc
newpath
6.34375 49.4062 m
8.60937 48.9218 l
8.76562 49.3072 8.89583 49.7031 9.00000 50.1093  c
9.13541 50.6927 9.25000 51.3906 9.34375 52.2031  c
9.38541 52.6093 9.44270 53.4687 9.51562 54.7812  c
10.1614 54.0625 10.5468 53.6145 10.6718 53.4375  c
11.3593 52.5104 11.7552 51.9635 11.8593 51.7968  c
12.0364 51.5260 12.1562 51.2864 12.2187 51.0781  c
12.2812 50.9218 12.3125 50.7708 12.3125 50.6250  c
12.3125 50.4895 12.1901 50.3333 11.9453 50.1562  c
11.7005 49.9791 11.5781 49.7812 11.5781 49.5625  c
11.5781 49.3958 11.6458 49.2474 11.7812 49.1171  c
11.9166 48.9869 12.0729 48.9218 12.2500 48.9218  c
12.4687 48.9218 12.6614 49.0130 12.8281 49.1953  c
12.9947 49.3776 13.0781 49.5989 13.0781 49.8593  c
13.0781 50.1302 13.0364 50.3854 12.9531 50.6250  c
12.8177 51.0208 12.5651 51.5052 12.1953 52.0781  c
11.8255 52.6510 11.2291 53.4166 10.4062 54.3750  c
10.3020 54.4895 9.72395 55.0937 8.67187 56.1875  c
8.39062 56.1875 l
8.26562 52.8854 8.00520 50.8281 7.60937 50.0156  c
7.47395 49.7447 7.25520 49.6093 6.95312 49.6093  c
6.82812 49.6093 6.64583 49.6354 6.40625 49.6875  c
6.34375 49.4062 l
h
f
newpath
22.7500 59.1718 m
19.3125 59.1718 l
19.3125 45.1562 l
22.7500 45.1562 l
22.7500 45.7812 l
20.4843 45.7812 l
20.4843 58.5625 l
22.7500 58.5625 l
22.7500 59.1718 l
h
25.9531 50.1562 m
26.4739 49.6354 26.7812 49.3333 26.8750 49.2500  c
27.1145 49.0520 27.3697 48.8984 27.6406 48.7890  c
27.9114 48.6796 28.1770 48.6250 28.4375 48.6250  c
28.8854 48.6250 29.2708 48.7552 29.5937 49.0156  c
29.9166 49.2760 30.1354 49.6562 30.2500 50.1562  c
30.7812 49.5312 31.2317 49.1197 31.6015 48.9218  c
31.9713 48.7239 32.3541 48.6250 32.7500 48.6250  c
33.1250 48.6250 33.4609 48.7239 33.7578 48.9218  c
34.0546 49.1197 34.2864 49.4375 34.4531 49.8750  c
34.5677 50.1770 34.6250 50.6510 34.6250 51.2968  c
34.6250 54.3750 l
34.6250 54.8229 34.6614 55.1302 34.7343 55.2968  c
34.7864 55.4114 34.8828 55.5104 35.0234 55.5937  c
35.1640 55.6770 35.3906 55.7187 35.7031 55.7187  c
35.7031 56.0000 l
32.1718 56.0000 l
32.1718 55.7187 l
32.3281 55.7187 l
32.6302 55.7187 32.8697 55.6562 33.0468 55.5312  c
33.1614 55.4479 33.2447 55.3177 33.2968 55.1406  c
33.3177 55.0468 33.3281 54.7916 33.3281 54.3750  c
33.3281 51.2968 l
33.3281 50.7135 33.2604 50.3020 33.1250 50.0625  c
32.9166 49.7291 32.5885 49.5625 32.1406 49.5625  c
31.8697 49.5625 31.5937 49.6328 31.3125 49.7734  c
31.0312 49.9140 30.6927 50.1718 30.2968 50.5468  c
30.2812 50.6250 l
30.2968 50.9687 l
30.2968 54.3750 l
30.2968 54.8645 30.3255 55.1692 30.3828 55.2890  c
30.4401 55.4088 30.5442 55.5104 30.6953 55.5937  c
30.8463 55.6770 31.1041 55.7187 31.4687 55.7187  c
31.4687 56.0000 l
27.8437 56.0000 l
27.8437 55.7187 l
28.2395 55.7187 28.5130 55.6718 28.6640 55.5781  c
28.8151 55.4843 28.9166 55.3437 28.9687 55.1562  c
29.0000 55.0625 29.0156 54.8020 29.0156 54.3750  c
29.0156 51.2968 l
29.0156 50.7135 28.9270 50.2968 28.7500 50.0468  c
28.5208 49.7135 28.2031 49.5468 27.7968 49.5468  c
27.5156 49.5468 27.2343 49.6197 26.9531 49.7656  c
26.5260 49.9947 26.1927 50.2552 25.9531 50.5468  c
25.9531 54.3750 l
25.9531 54.8437 25.9869 55.1484 26.0546 55.2890  c
26.1224 55.4296 26.2187 55.5364 26.3437 55.6093  c
26.4687 55.6822 26.7291 55.7187 27.1250 55.7187  c
27.1250 56.0000 l
23.5781 56.0000 l
23.5781 55.7187 l
23.9114 55.7187 24.1432 55.6822 24.2734 55.6093  c
24.4036 55.5364 24.5026 55.4244 24.5703 55.2734  c
24.6380 55.1224 24.6718 54.8229 24.6718 54.3750  c
24.6718 51.6406 l
24.6718 50.8593 24.6458 50.3541 24.5937 50.1250  c
24.5625 49.9479 24.5078 49.8281 24.4296 49.7656  c
24.3515 49.7031 24.2447 49.6718 24.1093 49.6718  c
23.9635 49.6718 23.7864 49.7083 23.5781 49.7812  c
23.4687 49.5000 l
25.6250 48.6250 l
25.9531 48.6250 l
25.9531 50.1562 l
h
38.3984 50.1562 m
38.9192 49.6354 39.2265 49.3333 39.3203 49.2500  c
39.5599 49.0520 39.8151 48.8984 40.0859 48.7890  c
40.3567 48.6796 40.6224 48.6250 40.8828 48.6250  c
41.3307 48.6250 41.7161 48.7552 42.0390 49.0156  c
42.3619 49.2760 42.5807 49.6562 42.6953 50.1562  c
43.2265 49.5312 43.6770 49.1197 44.0468 48.9218  c
44.4166 48.7239 44.7994 48.6250 45.1953 48.6250  c
45.5703 48.6250 45.9062 48.7239 46.2031 48.9218  c
46.5000 49.1197 46.7317 49.4375 46.8984 49.8750  c
47.0130 50.1770 47.0703 50.6510 47.0703 51.2968  c
47.0703 54.3750 l
47.0703 54.8229 47.1067 55.1302 47.1796 55.2968  c
47.2317 55.4114 47.3281 55.5104 47.4687 55.5937  c
47.6093 55.6770 47.8359 55.7187 48.1484 55.7187  c
48.1484 56.0000 l
44.6171 56.0000 l
44.6171 55.7187 l
44.7734 55.7187 l
45.0755 55.7187 45.3151 55.6562 45.4921 55.5312  c
45.6067 55.4479 45.6901 55.3177 45.7421 55.1406  c
45.7630 55.0468 45.7734 54.7916 45.7734 54.3750  c
45.7734 51.2968 l
45.7734 50.7135 45.7057 50.3020 45.5703 50.0625  c
45.3619 49.7291 45.0338 49.5625 44.5859 49.5625  c
44.3151 49.5625 44.0390 49.6328 43.7578 49.7734  c
43.4765 49.9140 43.1380 50.1718 42.7421 50.5468  c
42.7265 50.6250 l
42.7421 50.9687 l
42.7421 54.3750 l
42.7421 54.8645 42.7708 55.1692 42.8281 55.2890  c
42.8854 55.4088 42.9895 55.5104 43.1406 55.5937  c
43.2916 55.6770 43.5494 55.7187 43.9140 55.7187  c
43.9140 56.0000 l
40.2890 56.0000 l
40.2890 55.7187 l
40.6849 55.7187 40.9583 55.6718 41.1093 55.5781  c
41.2604 55.4843 41.3619 55.3437 41.4140 55.1562  c
41.4453 55.0625 41.4609 54.8020 41.4609 54.3750  c
41.4609 51.2968 l
41.4609 50.7135 41.3724 50.2968 41.1953 50.0468  c
40.9661 49.7135 40.6484 49.5468 40.2421 49.5468  c
39.9609 49.5468 39.6796 49.6197 39.3984 49.7656  c
38.9713 49.9947 38.6380 50.2552 38.3984 50.5468  c
38.3984 54.3750 l
38.3984 54.8437 38.4322 55.1484 38.5000 55.2890  c
38.5677 55.4296 38.6640 55.5364 38.7890 55.6093  c
38.9140 55.6822 39.1744 55.7187 39.5703 55.7187  c
39.5703 56.0000 l
36.0234 56.0000 l
36.0234 55.7187 l
36.3567 55.7187 36.5885 55.6822 36.7187 55.6093  c
36.8489 55.5364 36.9479 55.4244 37.0156 55.2734  c
37.0833 55.1224 37.1171 54.8229 37.1171 54.3750  c
37.1171 51.6406 l
37.1171 50.8593 37.0911 50.3541 37.0390 50.1250  c
37.0078 49.9479 36.9531 49.8281 36.8750 49.7656  c
36.7968 49.7031 36.6901 49.6718 36.5546 49.6718  c
36.4088 49.6718 36.2317 49.7083 36.0234 49.7812  c
35.9140 49.5000 l
38.0703 48.6250 l
38.3984 48.6250 l
38.3984 50.1562 l
h
48.8125 45.1562 m
52.2500 45.1562 l
52.2500 59.1875 l
48.8125 59.1875 l
48.8125 58.5625 l
51.0781 58.5625 l
51.0781 45.7812 l
48.8125 45.7812 l
48.8125 45.1562 l
h
f
Q
cliprestore
newpath
0 0 m
0 95.0000 l
550.000 95.0000 l
550.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 83.8262 m
90.6750 83.8262 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 81.0000 88.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -81.0000 -88.0000 ] concat
q
68 81 9 16 rc
newpath
81.2812 89.6093 m
70.7187 89.6093 l
70.7187 88.7812 l
81.2812 88.7812 l
81.2812 89.6093 l
h
f
Q
newpath
86.4531 90.0937 m
86.4531 91.2031 l
85.0312 91.2031 l
85.0312 94.0000 l
83.7343 94.0000 l
83.7343 91.2031 l
79.2500 91.2031 l
79.2500 90.2031 l
84.1718 83.1875 l
85.0312 83.1875 l
85.0312 90.0937 l
86.4531 90.0937 l
h
83.7343 90.0937 m
83.7343 84.8281 l
80.0156 90.0937 l
83.7343 90.0937 l
h
87.5781 88.7656 m
87.5781 87.5572 87.7604 86.5156 88.1250 85.6406  c
88.4895 84.7656 88.9739 84.1145 89.5781 83.6875  c
90.0468 83.3541 90.5312 83.1875 91.0312 83.1875  c
91.8437 83.1875 92.5729 83.5989 93.2187 84.4218  c
94.0312 85.4531 94.4375 86.8437 94.4375 88.5937  c
94.4375 89.8229 94.2604 90.8671 93.9062 91.7265  c
93.5520 92.5859 93.0989 93.2109 92.5468 93.6015  c
91.9947 93.9921 91.4635 94.1875 90.9531 94.1875  c
89.9427 94.1875 89.1041 93.5885 88.4375 92.3906  c
87.8645 91.3906 87.5781 90.1822 87.5781 88.7656  c
h
89.1093 88.9531 m
89.1093 90.4114 89.2916 91.6041 89.6562 92.5312  c
89.9479 93.3020 90.3906 93.6875 90.9843 93.6875  c
91.2656 93.6875 91.5572 93.5625 91.8593 93.3125  c
92.1614 93.0625 92.3906 92.6406 92.5468 92.0468  c
92.7864 91.1510 92.9062 89.8854 92.9062 88.2500  c
92.9062 87.0416 92.7812 86.0364 92.5312 85.2343  c
92.3437 84.6302 92.0989 84.2031 91.7968 83.9531  c
91.5885 83.7864 91.3333 83.7031 91.0312 83.7031  c
90.6770 83.7031 90.3593 83.8593 90.0781 84.1718  c
89.7031 84.6093 89.4479 85.2916 89.3125 86.2187  c
89.1770 87.1458 89.1093 88.0572 89.1093 88.9531  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 65.3913 m
90.6750 65.3913 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 81.0000 70.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -81.0000 -70.0000 ] concat
q
68 63 9 16 rc
newpath
81.2812 71.6093 m
70.7187 71.6093 l
70.7187 70.7812 l
81.2812 70.7812 l
81.2812 71.6093 l
h
f
Q
newpath
79.8125 67.4218 m
80.1145 66.7031 80.4974 66.1510 80.9609 65.7656  c
81.4244 65.3802 82.0000 65.1875 82.6875 65.1875  c
83.5312 65.1875 84.1822 65.4635 84.6406 66.0156  c
84.9843 66.4218 85.1562 66.8593 85.1562 67.3281  c
85.1562 68.0989 84.6718 68.8958 83.7031 69.7187  c
84.3489 69.9791 84.8385 70.3463 85.1718 70.8203  c
85.5052 71.2942 85.6718 71.8489 85.6718 72.4843  c
85.6718 73.4010 85.3802 74.1979 84.7968 74.8750  c
84.0364 75.7500 82.9375 76.1875 81.5000 76.1875  c
80.7812 76.1875 80.2942 76.0989 80.0390 75.9218  c
79.7838 75.7447 79.6562 75.5520 79.6562 75.3437  c
79.6562 75.1979 79.7161 75.0677 79.8359 74.9531  c
79.9557 74.8385 80.1041 74.7812 80.2812 74.7812  c
80.4062 74.7812 80.5364 74.8020 80.6718 74.8437  c
80.7656 74.8645 80.9687 74.9583 81.2812 75.1250  c
81.5937 75.2916 81.8072 75.3906 81.9218 75.4218  c
82.1197 75.4739 82.3281 75.5000 82.5468 75.5000  c
83.0781 75.5000 83.5390 75.2942 83.9296 74.8828  c
84.3203 74.4713 84.5156 73.9843 84.5156 73.4218  c
84.5156 73.0156 84.4270 72.6145 84.2500 72.2187  c
84.1145 71.9270 83.9635 71.7083 83.7968 71.5625  c
83.5781 71.3541 83.2734 71.1640 82.8828 70.9921  c
82.4921 70.8203 82.0937 70.7343 81.6875 70.7343  c
81.4375 70.7343 l
81.4375 70.5000 l
81.8437 70.4479 82.2552 70.2994 82.6718 70.0546  c
83.0885 69.8099 83.3906 69.5156 83.5781 69.1718  c
83.7656 68.8281 83.8593 68.4531 83.8593 68.0468  c
83.8593 67.5052 83.6901 67.0703 83.3515 66.7421  c
83.0130 66.4140 82.5937 66.2500 82.0937 66.2500  c
81.2916 66.2500 80.6197 66.6822 80.0781 67.5468  c
79.8125 67.4218 l
h
87.5781 70.7656 m
87.5781 69.5572 87.7604 68.5156 88.1250 67.6406  c
88.4895 66.7656 88.9739 66.1145 89.5781 65.6875  c
90.0468 65.3541 90.5312 65.1875 91.0312 65.1875  c
91.8437 65.1875 92.5729 65.5989 93.2187 66.4218  c
94.0312 67.4531 94.4375 68.8437 94.4375 70.5937  c
94.4375 71.8229 94.2604 72.8671 93.9062 73.7265  c
93.5520 74.5859 93.0989 75.2109 92.5468 75.6015  c
91.9947 75.9921 91.4635 76.1875 90.9531 76.1875  c
89.9427 76.1875 89.1041 75.5885 88.4375 74.3906  c
87.8645 73.3906 87.5781 72.1822 87.5781 70.7656  c
h
89.1093 70.9531 m
89.1093 72.4114 89.2916 73.6041 89.6562 74.5312  c
89.9479 75.3020 90.3906 75.6875 90.9843 75.6875  c
91.2656 75.6875 91.5572 75.5625 91.8593 75.3125  c
92.1614 75.0625 92.3906 74.6406 92.5468 74.0468  c
92.7864 73.1510 92.9062 71.8854 92.9062 70.2500  c
92.9062 69.0416 92.7812 68.0364 92.5312 67.2343  c
92.3437 66.6302 92.0989 66.2031 91.7968 65.9531  c
91.5885 65.7864 91.3333 65.7031 91.0312 65.7031  c
90.6770 65.7031 90.3593 65.8593 90.0781 66.1718  c
89.7031 66.6093 89.4479 67.2916 89.3125 68.2187  c
89.1770 69.1458 89.1093 70.0572 89.1093 70.9531  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 46.9564 m
90.6750 46.9564 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 81.0000 51.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -81.0000 -51.0000 ] concat
q
68 44 9 16 rc
newpath
81.2812 52.6093 m
70.7187 52.6093 l
70.7187 51.7812 l
81.2812 51.7812 l
81.2812 52.6093 l
h
f
Q
newpath
86.3437 54.9531 m
85.5937 57.0000 l
79.3437 57.0000 l
79.3437 56.7031 l
81.1875 55.0260 82.4843 53.6562 83.2343 52.5937  c
83.9843 51.5312 84.3593 50.5625 84.3593 49.6875  c
84.3593 49.0104 84.1536 48.4557 83.7421 48.0234  c
83.3307 47.5911 82.8385 47.3750 82.2656 47.3750  c
81.7447 47.3750 81.2760 47.5286 80.8593 47.8359  c
80.4427 48.1432 80.1354 48.5885 79.9375 49.1718  c
79.6562 49.1718 l
79.7812 48.2135 80.1145 47.4765 80.6562 46.9609  c
81.1979 46.4453 81.8697 46.1875 82.6718 46.1875  c
83.5364 46.1875 84.2552 46.4635 84.8281 47.0156  c
85.4010 47.5677 85.6875 48.2187 85.6875 48.9687  c
85.6875 49.5000 85.5625 50.0364 85.3125 50.5781  c
84.9270 51.4218 84.3020 52.3125 83.4375 53.2500  c
82.1458 54.6666 81.3385 55.5208 81.0156 55.8125  c
83.7812 55.8125 l
84.3437 55.8125 84.7369 55.7916 84.9609 55.7500  c
85.1849 55.7083 85.3880 55.6250 85.5703 55.5000  c
85.7526 55.3750 85.9114 55.1927 86.0468 54.9531  c
86.3437 54.9531 l
h
87.5781 51.7656 m
87.5781 50.5572 87.7604 49.5156 88.1250 48.6406  c
88.4895 47.7656 88.9739 47.1145 89.5781 46.6875  c
90.0468 46.3541 90.5312 46.1875 91.0312 46.1875  c
91.8437 46.1875 92.5729 46.5989 93.2187 47.4218  c
94.0312 48.4531 94.4375 49.8437 94.4375 51.5937  c
94.4375 52.8229 94.2604 53.8671 93.9062 54.7265  c
93.5520 55.5859 93.0989 56.2109 92.5468 56.6015  c
91.9947 56.9921 91.4635 57.1875 90.9531 57.1875  c
89.9427 57.1875 89.1041 56.5885 88.4375 55.3906  c
87.8645 54.3906 87.5781 53.1822 87.5781 51.7656  c
h
89.1093 51.9531 m
89.1093 53.4114 89.2916 54.6041 89.6562 55.5312  c
89.9479 56.3020 90.3906 56.6875 90.9843 56.6875  c
91.2656 56.6875 91.5572 56.5625 91.8593 56.3125  c
92.1614 56.0625 92.3906 55.6406 92.5468 55.0468  c
92.7864 54.1510 92.9062 52.8854 92.9062 51.2500  c
92.9062 50.0416 92.7812 49.0364 92.5312 48.2343  c
92.3437 47.6302 92.0989 47.2031 91.7968 46.9531  c
91.5885 46.7864 91.3333 46.7031 91.0312 46.7031  c
90.6770 46.7031 90.3593 46.8593 90.0781 47.1718  c
89.7031 47.6093 89.4479 48.2916 89.3125 49.2187  c
89.1770 50.1458 89.1093 51.0572 89.1093 51.9531  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 28.5215 m
90.6750 28.5215 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 81.0000 33.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -81.0000 -33.0000 ] concat
q
68 26 9 16 rc
newpath
81.2812 34.6093 m
70.7187 34.6093 l
70.7187 33.7812 l
81.2812 33.7812 l
81.2812 34.6093 l
h
f
Q
newpath
80.8750 29.4375 m
83.4531 28.1875 l
83.7187 28.1875 l
83.7187 37.1250 l
83.7187 37.7187 83.7421 38.0885 83.7890 38.2343  c
83.8359 38.3802 83.9375 38.4921 84.0937 38.5703  c
84.2500 38.6484 84.5677 38.6927 85.0468 38.7031  c
85.0468 39.0000 l
81.0625 39.0000 l
81.0625 38.7031 l
81.5625 38.6927 81.8854 38.6510 82.0312 38.5781  c
82.1770 38.5052 82.2786 38.4036 82.3359 38.2734  c
82.3932 38.1432 82.4218 37.7604 82.4218 37.1250  c
82.4218 31.4062 l
82.4218 30.6354 82.3958 30.1406 82.3437 29.9218  c
82.3125 29.7552 82.2474 29.6328 82.1484 29.5546  c
82.0494 29.4765 81.9322 29.4375 81.7968 29.4375  c
81.6093 29.4375 81.3437 29.5208 81.0000 29.6875  c
80.8750 29.4375 l
h
87.5781 33.7656 m
87.5781 32.5572 87.7604 31.5156 88.1250 30.6406  c
88.4895 29.7656 88.9739 29.1145 89.5781 28.6875  c
90.0468 28.3541 90.5312 28.1875 91.0312 28.1875  c
91.8437 28.1875 92.5729 28.5989 93.2187 29.4218  c
94.0312 30.4531 94.4375 31.8437 94.4375 33.5937  c
94.4375 34.8229 94.2604 35.8671 93.9062 36.7265  c
93.5520 37.5859 93.0989 38.2109 92.5468 38.6015  c
91.9947 38.9921 91.4635 39.1875 90.9531 39.1875  c
89.9427 39.1875 89.1041 38.5885 88.4375 37.3906  c
87.8645 36.3906 87.5781 35.1822 87.5781 33.7656  c
h
89.1093 33.9531 m
89.1093 35.4114 89.2916 36.6041 89.6562 37.5312  c
89.9479 38.3020 90.3906 38.6875 90.9843 38.6875  c
91.2656 38.6875 91.5572 38.5625 91.8593 38.3125  c
92.1614 38.0625 92.3906 37.6406 92.5468 37.0468  c
92.7864 36.1510 92.9062 34.8854 92.9062 33.2500  c
92.9062 32.0416 92.7812 31.0364 92.5312 30.2343  c
92.3437 29.6302 92.0989 29.2031 91.7968 28.9531  c
91.5885 28.7864 91.3333 28.7031 91.0312 28.7031  c
90.6770 28.7031 90.3593 28.8593 90.0781 29.1718  c
89.7031 29.6093 89.4479 30.2916 89.3125 31.2187  c
89.1770 32.1458 89.1093 33.0572 89.1093 33.9531  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 10.0866 m
90.6750 10.0866 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 88.0000 15.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -88.0000 -15.0000 ] concat
newpath
85.5781 15.7656 m
85.5781 14.5572 85.7604 13.5156 86.1250 12.6406  c
86.4895 11.7656 86.9739 11.1145 87.5781 10.6875  c
88.0468 10.3541 88.5312 10.1875 89.0312 10.1875  c
89.8437 10.1875 90.5729 10.5989 91.2187 11.4218  c
92.0312 12.4531 92.4375 13.8437 92.4375 15.5937  c
92.4375 16.8229 92.2604 17.8671 91.9062 18.7265  c
91.5520 19.5859 91.0989 20.2109 90.5468 20.6015  c
89.9947 20.9921 89.4635 21.1875 88.9531 21.1875  c
87.9427 21.1875 87.1041 20.5885 86.4375 19.3906  c
85.8645 18.3906 85.5781 17.1822 85.5781 15.7656  c
h
87.1093 15.9531 m
87.1093 17.4114 87.2916 18.6041 87.6562 19.5312  c
87.9479 20.3020 88.3906 20.6875 88.9843 20.6875  c
89.2656 20.6875 89.5572 20.5625 89.8593 20.3125  c
90.1614 20.0625 90.3906 19.6406 90.5468 19.0468  c
90.7864 18.1510 90.9062 16.8854 90.9062 15.2500  c
90.9062 14.0416 90.7812 13.0364 90.5312 12.2343  c
90.3437 11.6302 90.0989 11.2031 89.7968 10.9531  c
89.5885 10.7864 89.3333 10.7031 89.0312 10.7031  c
88.6770 10.7031 88.3593 10.8593 88.0781 11.1718  c
87.7031 11.6093 87.4479 12.2916 87.3125 13.2187  c
87.1770 14.1458 87.1093 15.0572 87.1093 15.9531  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 74.6087 m
92.3375 74.6087 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 79.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -79.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 56.1738 m
92.3375 56.1738 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 61.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -61.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 37.7389 m
92.3375 37.7389 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 42.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -42.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.0000 19.3040 m
92.3375 19.3040 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 24.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -24.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
1 0 560 105 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
